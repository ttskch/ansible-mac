- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    user: ttskch
    dotfiles:
      clone_command: "ghq get ttskch/dotfiles"
      symlink_command: "cd ~/ghq/github.com/ttskch/dotfiles && cp .zsh/secret.zsh.placeholder .zsh/secret.zsh && sh symlink.sh"
      zsh:
        insecure_directories:
          - /usr/local/share/zsh
          - /usr/local/share/zsh/site-functions

    homebrew_packages:
      - { name: act }
      - { name: ansible }
      - { name: antiword }
      - { name: awscli }
      - { name: bash }
      - { name: bat }
      - { name: oven-sh/bun/bun }
      - { name: carlocab/personal/unrar }
      - { name: cheat }
      - { name: colordiff }
      - { name: composer }
      - { name: coreutils }
      - { name: diff-so-fancy }
      - { name: difftastic }
      - { name: direnv }
      - { name: docker-clean }
      - { name: dvdbackup }
      - { name: exiftool }
      - { name: fd }
      - { name: ffmpeg }
      - { name: figlet }
      - { name: flyctl }
      - { name: git }
      - { name: gh }
      - { name: ghq }
      - { name: gnu-sed }
      - { name: go-task/tap/go-task }
      - { name: graphviz }
      - { name: heroku/brew/heroku }
      - { name: highlight }
      - { name: htop-osx }
      - { name: httpd }
      - { name: itchyny/tap/mmv }
      - { name: imagemagick }
      - { name: iproute2mac }
      - { name: java }
      - { name: jq }
      - { name: lastpass-cli }
      - { name: librsvg }
      - { name: mackerelio/mackerel-agent/mackerel-agent }
      - { name: mackerelio/mackerel-agent/mkr }
      - { name: mas }
      - { name: mkcert }
      - { name: mongodb/brew/mongodb-community }
      - { name: nkf }
      - { name: nodenv }
      - { name: openssl }
      - { name: p7zip }
      - { name: packer }
      - { name: pandoc }
      - { name: peco }
      - { name: postgresql@14 }
      - { name: postgresql@15 }
      - { name: shivammathur/php/php@7.4 }
      - { name: shivammathur/php/php@8.0 }
      - { name: shivammathur/php/php@8.1 }
      - { name: shivammathur/php/php@8.2 }
      - { name: shivammathur/php/php@8.3 }
      - { name: shivammathur/extensions/apcu@8.3 }
      - { name: shivammathur/extensions/xdebug@8.3 }
      - { name: pkg-config } # pecl needs this
      - { name: zlib }       # pecl needs this
      - { name: phpunit }
      - { name: python@3.9 }
      - { name: python }
      - { name: rails-completion }
      - { name: reattach-to-user-namespace }
      - { name: redis }
      - { name: rename }
      - { name: rbenv }
      - { name: ripgrep }
      - { name: ruby-build }
      - { name: sbt }
      - { name: scala }
      - { name: sd }
      - { name: sendemail }
      - { name: sl }
      - { name: stripe/stripe-cli/stripe }
      - { name: sqlite }
      - { name: ssh-copy-id }
      - { name: symfony-cli/tap/symfony-cli }
      - { name: telnet }
      - { name: tig }
      - { name: tmux }
      - { name: tree }
      - { name: wget }
      - { name: youtube-dl }
      - { name: z }
      # mysql (order is important)
      - { name: mysql@5.7 } # v5.7 formatted /usr/local/etc/my.cnf will be created
      - { name: mysql } # v8 formatted /usr/local/etc/my.cnf.default (instead of my.cnf) will be created
      - { name: mysql, state: unlinked }
      - { name: mysql@5.7, state: linked } # uses /usr/local/etc/my.cnf by default

    homebrew_cask_packages:
      - 1password
      - 1password/tap/1password-cli
      - adobe-creative-cloud
      - alt-tab
      - android-studio
      - appcleaner
      - bartender
      - blackhole-2ch
      - blackhole-16ch
      - blackhole-64ch
      - caffeine
      - camunda-modeler
      - charles
      - cloudapp
      - dash
      - discord
      - docker
      - dropbox
      - dteoh/sqa/slowquitapps
      - eclipse-java
      - elgato-control-center
      - figma
      - firefox
      - flic
      - gitup
      - google-chrome
      - google-drive-file-stream
      - grammarly
      - gyazo
      - handbrake
      - homebrew/cask-drivers/fujitsu-scansnap-home
      - imageoptim
      - intellij-idea-ce
      - insomnia
      - iterm2
      - kap
      - karabiner-elements
      - keyboardcleantool
      - keycastr
      - kindle
      - krisp
      - libreoffice
      - macwinzipper
      - mmhmm
      - ngrok
      - notion
      - numi
      - obs
      - obsidian
      - parsehub
      - phpstorm
      - qr-journal
      - raycast
      - reaper
      - rectangle
      - sequel-ace
      - slack
      - sketch
      - skitch
      - skype
      - soundsource
      - sublime-text
      - tableplus
      - tor-browser
      - transmit
      - transmission
      - vagrant
      # - virtualbox # Apple silicon is not supported for now
      - visual-studio-code
      - vlc
      - wireshark
      - xbar
      - xmind
      - zoom
      # quicklook related
      - qlstephen
      - qlcolorcode
      - qlmarkdown
      - qlimagesize
      - betterzip
      - quicklook-csv
      - quicklook-json

    mas_packages:
      - { name: iPic, id: 1101244278 }
      - { name: Xcode, id: 497799835 }
      - { name: "Final Cut Pro", id: 424389933 }
      - { name: Keynote, id: 409183694 }
      - { name: iMovie, id: 408981434 }
      - { name: "Tomato One", id: 907364780 }
      - { name: Motion, id: 434290957 }
      - { name: iText, id: 1314980676 }
      - { name: LINE, id: 539883307 }
      - { name: GarageBand, id: 682658836 }
      - { name: LadioCast, id: 411213048 }
      - { name: GIPHY, id: 668208984 }
      - { name: "Toggl Track", id: 1291898086 }

    composer_packages:
      - { name: "psy/psysh" }

    node_installations:
      - { version: 18.13.0, active: yes }
      - { version: 19.4.0, active: no }

    npm_packages:
      - { name: "@angular/cli" }
      - { name: "@google/clasp" }
      - { name: "@upstash/cli" }
      - { name: aicommits }
      - { name: bower }
      - { name: coffee-script }
      - { name: firebase-tools }
      - { name: git-cz }
      - { name: grunt-cli }
      - { name: gulp }
      - { name: hubot }
      - { name: karma }
      - { name: less }
      - { name: lighthouse }
      - { name: localtunnel }
      - { name: nativefier }
      - { name: netlify-cli }
      - { name: npm-check-updates }
      - { name: pnpm }
      - { name: prettier }
      - { name: typescript }
      - { name: typings }
      - { name: vercel }
      - { name: yarn }
      - { name: yo }

  tasks:
    # brew update
    - name: update homebrew
      homebrew: update_homebrew=yes
      tags:
        - brew

    # brew install
    - name: install homebrew packages
      homebrew: name="{{ item.name }}" state="{{ item.state|default('latest') }}" install_options="{{ item.install_options|default() }}"
      with_items: "{{ homebrew_packages }}"
      tags:
        - brew
    - name: mkdir /usr/local/bin
      file:
        path: /usr/local/bin
        state: directory
        owner: "{{ user }}"
      become: yes
      become_method: sudo
      tags:
        - brew
    - name: symlink python3 as python
      file:
        src: /opt/homebrew/bin/python3
        dest: /usr/local/bin/python
        state: link
      tags:
        - brew

    # brew cask install
    - name: install homebrew cask packages
      homebrew_cask: name="{{ item }}" state=present
      with_items: "{{ homebrew_cask_packages }}"
      ignore_errors: yes
      tags:
        - cask

    # mas install
    - name: install mas (App Store) packages
      shell: mas install "{{ item.id }}"
      with_items: "{{ mas_packages }}"
      register: ret
      changed_when: '"already installed" not in ret.stdout'
      tags:
        - mas

    # mas upgrade
    - name: upgrade all mas (App Store) packages
      shell: mas upgrade
      register: ret
      changed_when: '"Everything is up-to-date" not in ret.stdout'
      tags:
        - mas

    # install dotfiles
    - name: install zinit
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)"
      args:
        creates: ~/.zinit
      tags:
        - dotfiles
    - name: git clone dotfiles
      shell: "{{ dotfiles.clone_command }}"
      register: ret
      changed_when: 'ret.rc != 0 or "exists" not in ret.stderr'
      tags:
        - dotfiles
    - name: symlink dotfiles
      shell: "{{ dotfiles.symlink_command }}"
      tags:
        - dotfiles
    - name: reload dotfiles
      shell: source ~/.zshrc
      tags:
        - dotfiles
    - name: resolve zsh insecure directories alert
      file:
        path: "{{ item }}"
        recurse: yes
        mode: '0755'
      with_items: "{{ dotfiles.zsh.insecure_directories }}"
      tags:
        - dotfiles

    # tmux plugins
    - name: install tmux plugin manager
      git: repo=git@github.com:tmux-plugins/tpm.git dest=~/.tmux/plugins/tpm
      tags:
        - tmux

    # composer global install
    - name: install composer packages
      composer: command=require global_command=yes arguments="{{ item.name }}"
      with_items: "{{ composer_packages }}"
      tags:
        - php
        - composer

    # install symfony/cli
    - name: install symfony/cli
      shell: curl -sS https://get.symfony.com/cli/installer | bash
      tags:
        - php
        - symfony

    # install node via nodenv
    - name: nodenv init
      shell: nodenv init
      args:
        creates: ~/.nodenv
      tags:
        - node
        - npm
    - name: install node via nodenv
      shell: nodenv install {{ item.version }}
      args:
        creates: "~/.nodenv/versions/{{ item.version }}*"
      with_items: "{{ node_installations }}"
      tags:
        - node
        - npm
    - name: activate specified node
      shell: nodenv global {{ item.version }}
      with_items: "{{ node_installations }}"
      when: item.active
      tags:
        - node
        - npm

    # npm -g install
    - name: mkdir /usr/local/lib
      file:
        path: /usr/local/lib
        state: directory
        owner: "{{ user }}"
      become: yes
      become_method: sudo
      tags:
        - node
        - npm
    - name: install npm packages
      npm: name="{{ item.name }}" state="{{ item.state|default('latest') }}" version="{{ item.version|default() }}" global=yes
      with_items: "{{ npm_packages }}"
      tags:
        - node
        - npm

    # configure mysql
    - name: chown mysql directory
      file: path=/opt/homebrew/var/mysql owner=_mysql group=_mysql recurse=yes
      become: yes
      become_method: sudo
      tags:
        - mysql
